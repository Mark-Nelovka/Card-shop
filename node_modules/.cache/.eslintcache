[{"/Users/marknelovka/Desktop/Goit/React/shop/src/index.js":"1","/Users/marknelovka/Desktop/Goit/React/shop/src/App.js":"2","/Users/marknelovka/Desktop/Goit/React/shop/src/components/homePage.js":"3","/Users/marknelovka/Desktop/Goit/React/shop/src/components/header.js":"4","/Users/marknelovka/Desktop/Goit/React/shop/src/components/Api.js":"5","/Users/marknelovka/Desktop/Goit/React/shop/src/components/modalCurrency.js":"6","/Users/marknelovka/Desktop/Goit/React/shop/src/components/modalBag.js":"7","/Users/marknelovka/Desktop/Goit/React/shop/src/components/ItemPage.js":"8"},{"size":939,"mtime":1654040422333,"results":"9","hashOfConfig":"10"},{"size":1415,"mtime":1655302017004,"results":"11","hashOfConfig":"10"},{"size":10921,"mtime":1655304925670,"results":"12","hashOfConfig":"10"},{"size":2958,"mtime":1655301580359,"results":"13","hashOfConfig":"10"},{"size":2018,"mtime":1655305197864,"results":"14","hashOfConfig":"10"},{"size":912,"mtime":1654904322319,"results":"15","hashOfConfig":"10"},{"size":15754,"mtime":1655305166489,"results":"16","hashOfConfig":"10"},{"size":6489,"mtime":1655295069312,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1x009tp",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"/Users/marknelovka/Desktop/Goit/React/shop/src/index.js",[],[],[],"/Users/marknelovka/Desktop/Goit/React/shop/src/App.js",[],[],"/Users/marknelovka/Desktop/Goit/React/shop/src/components/homePage.js",["47"],[],"import { Component } from \"react\";\nimport { v4 } from \"uuid\";\nimport Basket from \"../images/Basket_card.svg\";\nimport ModalBag from \"./modalBag\";\nimport ItemPage from \"./ItemPage\";\nimport Api from \"./Api\";\nimport Notiflix from \"notiflix\";\nconst fetchProduct = new Api();\n\nexport default class HomePage extends Component {\n  state = {\n    showBasker: false,\n    productAll: [],\n    id: \"\",\n    priceHomePage: [],\n    activeSymbol: \"\",\n    bag: [],\n    cartPage: false,\n    currentItem: null,\n    category: [],\n    currentCategory: null,\n    saveAtrribute: [],\n  };\n\n  async componentDidMount() {\n    const activeCurrencies = localStorage.getItem(\"currencySymbol\");\n    if (activeCurrencies) {\n      this.setState({ activeSymbol: activeCurrencies });\n    }\n    const bagCounter = JSON.parse(localStorage.getItem(\"productItems\"));\n    const productInStock = [];\n    const productInStockF = [];\n    if (bagCounter) {\n      this.setState({ bag: bagCounter });\n    }\n    const result = await fetchProduct.getAllProduct();\n    const productsAll = result.map(\n      ({ gallery, id, name, prices, brand, inStock, category }) => {\n        const obj = {\n          product: gallery[0],\n          id: id,\n          name,\n          brand,\n          price: prices,\n          inStock,\n          category,\n        };\n        return obj;\n      }\n    );\n\n    for (let res of productsAll) {\n      if (!res.inStock) {\n        productInStockF.push(res);\n      } else {\n        productInStock.push(res);\n      }\n    }\n    const products = productInStock.concat(productInStockF);\n\n    const category = products\n      .map(({ category }) => {\n        return category[0].toUpperCase() + category.slice(1);\n      })\n      .filter((v, i, a) => a.indexOf(v) === i);\n    this.setState({\n      productAll: products,\n      category: category,\n      currentCategory: category[0],\n      activeSymbol: this.props.symbolCard,\n    });\n\n    for (let data of products) {\n      data.price.map(({ amount, currency }) => {\n        if (currency.symbol.trim() === this.props.symbolCard.trim()) {\n          return this.setState((prevState) => ({\n            priceHomePage: [...prevState.priceHomePage, amount],\n          }));\n        }\n        return amount;\n      });\n    }\n  }\n\n  componentDidUpdate(_, state) {\n    if (state.activeSymbol !== this.props.symbolCard) {\n      state.activeSymbol = this.props.symbolCard;\n      if (state.priceHomePage.length > 0) {\n        state.priceHomePage = [];\n      }\n      for (let data of state.productAll) {\n        data.price.map(({ amount, currency }) => {\n          if (currency.symbol.trim() === this.props.symbolCard.trim()) {\n            return this.setState((prevState) => {\n              return prevState.priceHomePage.push(amount);\n            });\n          }\n          return amount;\n        });\n      }\n      return;\n    }\n    return;\n  }\n\n  getId = (e) => {\n    const { id } = e.currentTarget;\n    const { btn } = e.target.dataset;\n\n    switch (e._reactName) {\n      case \"onMouseOver\":\n        if (id !== this.state.id) {\n          this.setState({ id: id });\n        }\n        break;\n      case \"onClick\":\n        if (btn === undefined) {\n          this.setState({ currentItem: id });\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  saveAtrribute = (unique) => {\n    if (this.state.saveAtrribute.includes(unique)) {\n      const findUniqueKey = this.state.saveAtrribute.findIndex(\n        (v) => v === unique\n      );\n      this.state.saveAtrribute.splice(findUniqueKey, 1);\n      const state = this.state.saveAtrribute;\n\n      this.setState({ saveAtrribute: state });\n      return;\n    }\n    this.setState((prevState) => ({\n      saveAtrribute: [...prevState.saveAtrribute, unique],\n    }));\n  };\n\n  decrementBag = async (arr) => {\n    localStorage.setItem(\"productItems\", JSON.stringify(arr));\n    this.setState({ bag: arr });\n    this.props.countBag(arr);\n  };\n\n  addBag = async (e) => {\n    const { id } = this.state;\n    const { btn } = e.target.dataset;\n    if (btn === undefined) {\n      this.setState({ currentItem: null });\n    }\n    const { bag } = this.state;\n    const productId = await fetchProduct.getProductId(id);\n    const item = productId.map(\n      ({ name, brand, gallery, id, prices, attributes }) => {\n        const attributesWithChange = attributes.map((val) => {\n          const itemsWithUniqueKey = [];\n\n          for (let items of val.items) {\n            itemsWithUniqueKey.push({\n              uniqueIdForButton: v4(),\n              items,\n            });\n          }\n          return {\n            id: val.id,\n            items: itemsWithUniqueKey,\n          };\n        });\n        return {\n          name,\n          brand,\n          gallery: gallery[0],\n          id,\n          attributes: attributesWithChange,\n          prices,\n        };\n      }\n    );\n    localStorage.setItem(\"productItems\", JSON.stringify([...item, ...bag]));\n    this.setState((prevState) => ({\n      bag: [...prevState.bag, ...item],\n    }));\n    this.props.countBag([...item, ...bag]);\n  };\n\n  toggleCart = (textButton) => {\n    if (textButton !== \"View bag\") {\n      this.setState({\n        saveAtrribute: [],\n      });\n    }\n    this.setState({\n      cartPage: !this.state.cartPage,\n    });\n  };\n\n  changeCategory = (e) => {\n    const { category } = e.target.dataset;\n    this.setState({ currentCategory: category });\n  };\n\n  render() {\n    const {\n      productAll,\n      priceHomePage,\n      cartPage,\n      currentItem,\n      activeSymbol,\n      category,\n      currentCategory,\n      bag,\n    } = this.state;\n    const { symbolCard, modalBag, toggle } = this.props;\n    return (\n      <main>\n        {!currentItem && !cartPage && (\n          <>\n            <div className={modalBag && bag.length > 0 ? \"backdrop\" : \"\"}></div>\n            <div className=\"container\">\n              {category.length > 0 &&\n                category.map((categoryName) => {\n                  return (\n                    <button\n                      onClick={this.changeCategory}\n                      data-category={categoryName}\n                      key={v4()}\n                      className=\"category-name\"\n                    >\n                      {categoryName}\n                    </button>\n                  );\n                })}\n              <ul className=\"gallery_list\">\n                {productAll.length > 0 &&\n                  productAll.map(\n                    (\n                      { product, id, name, price, brand, inStock, category },\n                      inx\n                    ) => {\n                      if (category === currentCategory.toLowerCase()) {\n                        return (\n                          <li\n                            onClick={this.getId}\n                            onMouseOver={this.getId}\n                            id={id}\n                            className={\n                              inStock\n                                ? \"gallery_item\"\n                                : \"gallery_item--disabled\"\n                            }\n                            key={v4()}\n                          >\n                            <img\n                              height=\"330\"\n                              src={product}\n                              alt=\"our products\"\n                            />\n\n                            <p\n                              className={\n                                inStock\n                                  ? \"gallery_brand\"\n                                  : \"gallery_brand--disabled\"\n                              }\n                            >\n                              {`${brand} ${name}`}\n                            </p>\n                            <p\n                              className={\n                                inStock\n                                  ? \"gallery_price\"\n                                  : \"gallery_price--disabled\"\n                              }\n                            >\n                              {symbolCard}\n                              {price.map((data) => {\n                                return priceHomePage\n                                  .filter(\n                                    (val, ind, arr) => arr.indexOf(val) === ind\n                                  )\n                                  .find((val, ind) => {\n                                    if (\n                                      inx === ind &&\n                                      val === data.amount &&\n                                      data.currency.symbol.trim() ===\n                                        symbolCard.trim()\n                                    ) {\n                                      return val;\n                                    }\n                                    return null;\n                                  });\n                              })}\n                            </p>\n                            {id === this.state.id && inStock && !modalBag && (\n                              <button\n                                id={id}\n                                onClick={this.addBag}\n                                className=\"btn_add-basket\"\n                                data-btn=\"button\"\n                              >\n                                <img\n                                  src={Basket}\n                                  alt=\"Add to basket\"\n                                  data-btn=\"button\"\n                                />\n                              </button>\n                            )}\n                            {!inStock && (\n                              <p className=\"gallery_out\">OUT OF STOCK</p>\n                            )}\n                          </li>\n                        );\n                      }\n                      return \"\";\n                    }\n                  )}\n              </ul>\n            </div>\n          </>\n        )}\n        {modalBag && bag.length > 0 && (\n          <ModalBag\n            symbol={symbolCard}\n            toggle={toggle}\n            toggleCart={this.toggleCart}\n            cart={cartPage}\n            countBag={this.addBag}\n            getId={this.getId}\n            decrementBag={this.decrementBag}\n            saveAtrribute={this.saveAtrribute}\n          />\n        )}\n        {cartPage && (\n          <ModalBag\n            symbol={symbolCard}\n            toggle={toggle}\n            toggleCart={this.toggleCart}\n            cart={cartPage}\n            countBag={this.addBag}\n            getId={this.getId}\n            decrementBag={this.decrementBag}\n            saveAtrribute={this.saveAtrribute}\n            saveAtrributeArr={this.state.saveAtrribute}\n          />\n        )}\n        {currentItem && (\n          <ItemPage\n            modalBag={modalBag}\n            itemId={currentItem}\n            currentSymbol={activeSymbol}\n            addBag={this.addBag}\n          />\n        )}\n      </main>\n    );\n  }\n}\n",[],"/Users/marknelovka/Desktop/Goit/React/shop/src/components/header.js",[],[],[],"/Users/marknelovka/Desktop/Goit/React/shop/src/components/Api.js",[],[],"/Users/marknelovka/Desktop/Goit/React/shop/src/components/modalCurrency.js",[],[],[],"/Users/marknelovka/Desktop/Goit/React/shop/src/components/modalBag.js",[],[],"/Users/marknelovka/Desktop/Goit/React/shop/src/components/ItemPage.js",[],[],{"ruleId":"48","severity":1,"message":"49","line":7,"column":8,"nodeType":"50","messageId":"51","endLine":7,"endColumn":16},"no-unused-vars","'Notiflix' is defined but never used.","Identifier","unusedVar"]