[{"/Users/marknelovka/Desktop/Goit/React/shop/src/index.js":"1","/Users/marknelovka/Desktop/Goit/React/shop/src/App.js":"2","/Users/marknelovka/Desktop/Goit/React/shop/src/components/homePage.js":"3","/Users/marknelovka/Desktop/Goit/React/shop/src/components/header.js":"4","/Users/marknelovka/Desktop/Goit/React/shop/src/components/Api.js":"5","/Users/marknelovka/Desktop/Goit/React/shop/src/components/modalCurrency.js":"6","/Users/marknelovka/Desktop/Goit/React/shop/src/components/modalBag.js":"7"},{"size":939,"mtime":1654040422333,"results":"8","hashOfConfig":"9"},{"size":1543,"mtime":1654518939547,"results":"10","hashOfConfig":"9"},{"size":5688,"mtime":1654608582085,"results":"11","hashOfConfig":"9"},{"size":3409,"mtime":1654597433227,"results":"12","hashOfConfig":"9"},{"size":1811,"mtime":1654607510851,"results":"13","hashOfConfig":"9"},{"size":907,"mtime":1654513990073,"results":"14","hashOfConfig":"9"},{"size":3831,"mtime":1654610954536,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1x009tp",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"/Users/marknelovka/Desktop/Goit/React/shop/src/index.js",[],[],[],"/Users/marknelovka/Desktop/Goit/React/shop/src/App.js",[],[],[],"/Users/marknelovka/Desktop/Goit/React/shop/src/components/homePage.js",[],[],[],"/Users/marknelovka/Desktop/Goit/React/shop/src/components/header.js",[],[],"/Users/marknelovka/Desktop/Goit/React/shop/src/components/Api.js",[],[],"/Users/marknelovka/Desktop/Goit/React/shop/src/components/modalCurrency.js",[],[],"/Users/marknelovka/Desktop/Goit/React/shop/src/components/modalBag.js",["41"],[],"import { Component } from \"react\";\nimport { v4 } from \"uuid\";\n\nexport default class ModalBag extends Component {\n  state = {\n    itemsBag: null,\n    symbol: this.props.symbol,\n    total: 0,\n  };\n\n  componentDidMount() {\n    const { total, symbol } = this.state;\n\n    const itemStorage = JSON.parse(localStorage.getItem(\"productItems\"));\n    if (itemStorage) {\n      const item = itemStorage.map(\n        ({ name, brand, gallery, id, prices, attributes }) => {\n          return {\n            name,\n            brand,\n            gallery: gallery[0],\n            id,\n            attributes,\n            prices,\n          };\n        }\n      );\n      const prices = item.flatMap((data) => {\n        return data.prices;\n      });\n\n      const price = prices.reduce((acc, val) => {\n        if (val.currency.symbol.trim() === symbol.trim()) {\n          return (acc += val.amount);\n        }\n        return acc;\n      }, 0);\n      this.setState({ total: price });\n      return this.setState({ itemsBag: item });\n    }\n  }\n\n  render() {\n    const { itemsBag, symbol, total } = this.state;\n    return (\n      <div className=\"modal_container-bag\">\n        {itemsBag ? (\n          <div>\n            <p className=\"bag_title\">\n              <span>My bag,</span>\n              {` ${itemsBag.length} items`}\n            </p>\n            <ul>\n              {itemsBag.map(\n                ({ name, brand, gallery, id, attributes, prices }) => {\n                  return (\n                    <li key={id}>\n                      <p>{brand}</p>\n                      <p>{name}</p>\n                      <p>\n                        {symbol}\n                        {prices.map((data) => {\n                          if (data.currency.symbol.trim() === symbol.trim()) {\n                            return data.amount;\n                          }\n                          return \"\";\n                        })}\n                      </p>\n                      {attributes.map((dataAtr) => {\n                        return (\n                          <div key={v4()}>\n                            <p>{dataAtr.id}:</p>\n                            <div>\n                              {dataAtr.items.map((dataItem) => {\n                                if (dataAtr.id === \"Color\") {\n                                  return (\n                                    <div\n                                      key={v4()}\n                                      style={{\n                                        backgroundColor: dataItem.value,\n                                        width: \"20px\",\n                                        height: \"20px\",\n                                      }}\n                                    ></div>\n                                  );\n                                }\n                                return <p key={v4()}>{dataItem.value}</p>;\n                              })}\n                            </div>\n                          </div>\n                        );\n                      })}\n                      <div>\n                        <button>+</button>\n                        <span>1</span>\n                        <button>-</button>\n                      </div>\n                      <div>\n                        <img\n                          src={gallery}\n                          alt=\"Item in bag\"\n                          width=\"121px\"\n                          height=\"190px\"\n                        />\n                      </div>\n                    </li>\n                  );\n                }\n              )}\n            </ul>\n            <p>Total: {total}</p>\n            <div>\n              <button>View bag</button>\n              <button>CHECK OUT</button>\n            </div>\n          </div>\n        ) : (\n          <div>Корзина пуста</div>\n        )}\n      </div>\n    );\n  }\n}\n",{"ruleId":"42","severity":1,"message":"43","line":12,"column":13,"nodeType":"44","messageId":"45","endLine":12,"endColumn":18},"no-unused-vars","'total' is assigned a value but never used.","Identifier","unusedVar"]