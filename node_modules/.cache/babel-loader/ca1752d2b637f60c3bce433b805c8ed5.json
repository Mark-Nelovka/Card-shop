{"ast":null,"code":"var _jsxFileName = \"/Users/marknelovka/Desktop/Goit/React/shop/src/components/modalBag.js\";\nimport Notiflix from \"notiflix\";\nimport React, { Component } from \"react\";\nimport Prices from \"./prices\";\nimport Atrributes from \"./atrributes\";\nimport Count from \"./countAndImage\";\nimport Total from \"./total\";\nimport { v4 } from \"uuid\";\nimport Api from \"./Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchProduct = new Api();\nexport default class ModalBag extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      itemsBag: null,\n      symbol: this.props.symbol,\n      total: 0,\n      arrAtrributes: [],\n      activePageCart: this.props.cart,\n      quantity: 0,\n      sale: 0,\n      bagCounter: null\n    };\n\n    this.toggleBackdrop = e => {\n      if (e.key === \"Escape\") {\n        return this.props.toggle();\n      }\n\n      return;\n    };\n\n    this.changeAmount = async e => {\n      const {\n        id\n      } = e.target;\n      const {\n        name\n      } = e.target.dataset;\n      const {\n        itemsBag,\n        symbol,\n        total\n      } = this.state;\n\n      switch (name) {\n        case \"increment\":\n          const addProduct = await fetchProduct.getProductId(id);\n          this.props.countBag(e);\n          itemsBag.map(data => {\n            if (data.id === id) {\n              data.prices.map(_ref => {\n                let {\n                  amount,\n                  currency\n                } = _ref;\n\n                if (currency.symbol.trim() === symbol.trim()) {\n                  this.setState(prevState => ({\n                    total: prevState.total + amount\n                  }));\n                }\n\n                return data;\n              });\n            }\n\n            return total;\n          });\n          this.setState(prevState => ({\n            sale: prevState.total / 100 * 21,\n            quantity: prevState.quantity + 1,\n            bagCounter: [...prevState.bagCounter, ...addProduct]\n          }));\n          break;\n\n        case \"decrement\":\n          const uniqueId = [];\n          const uniqueProduct = [];\n          const arrBagCounter = JSON.parse(localStorage.getItem(\"productItems\"));\n          const bagLocalIndex = arrBagCounter.findIndex(v => v.id === id);\n          arrBagCounter.splice(bagLocalIndex, 1);\n          const counterRepete = arrBagCounter.reduce((acc, val) => {\n            if (id === val.id) {\n              acc += 1;\n            }\n\n            return acc;\n          }, 0);\n\n          if (counterRepete === 0) {\n            Notiflix.Notify.success(\"Item has been removed from cart\");\n\n            for (let data of arrBagCounter) {\n              if (!uniqueId.includes(data.id)) {\n                uniqueId.push(data.id);\n                uniqueProduct.push(data);\n              }\n            }\n\n            this.setState({\n              itemsBag: uniqueProduct\n            });\n          }\n\n          if (arrBagCounter.length < 1) {\n            if (this.props.cart) {\n              this.props.toggleCart();\n            } else {\n              this.props.toggle();\n            }\n          }\n\n          localStorage.setItem(\"productItems\", JSON.stringify(arrBagCounter));\n          this.props.decrementBag(arrBagCounter);\n          itemsBag.map(data => {\n            if (data.id === id) {\n              data.prices.map(_ref2 => {\n                let {\n                  amount,\n                  currency\n                } = _ref2;\n\n                if (currency.symbol.trim() === symbol.trim()) {\n                  this.setState(prevState => ({\n                    total: prevState.total - amount\n                  }));\n                }\n\n                return data;\n              });\n            }\n\n            return total;\n          });\n          this.setState(prevState => ({\n            sale: prevState.total / 100 * 21,\n            quantity: prevState.quantity - 1,\n            bagCounter: arrBagCounter\n          }));\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.selectActive = e => {\n      const {\n        unique\n      } = e.target.dataset;\n\n      if (this.state.arrAtrributes.includes(unique)) {\n        const findUniqueKey = this.state.arrAtrributes.findIndex(v => v === unique);\n        this.state.arrAtrributes.splice(findUniqueKey, 1);\n        const state = this.state.arrAtrributes;\n        this.props.saveAtrribute(unique);\n        this.setState({\n          arrAtrributes: state\n        });\n        return;\n      }\n\n      this.props.saveAtrribute(unique);\n      this.setState(prevState => ({\n        arrAtrributes: [...prevState.arrAtrributes, unique]\n      }));\n    };\n\n    this.openCart = e => {\n      const {\n        textContent\n      } = e.target;\n      this.props.toggle();\n      this.props.toggleCart(textContent);\n    };\n  }\n\n  componentWillUnmount() {\n    return window.removeEventListener(\"keydown\", this.toggleBackdrop);\n  }\n\n  componentDidMount() {\n    const arr = [];\n    window.addEventListener(\"keydown\", this.toggleBackdrop);\n    const {\n      symbol\n    } = this.state;\n    const itemStorage = JSON.parse(localStorage.getItem(\"productItems\"));\n\n    if (itemStorage) {\n      for (let data of itemStorage) {\n        const uniqueArrForModal = arr.find(v => v.id === data.id);\n\n        if (!uniqueArrForModal) {\n          arr.push(data);\n        }\n      }\n\n      const prices = itemStorage.flatMap(data => {\n        return data.prices;\n      });\n      const price = prices.reduce((acc, _ref3) => {\n        let {\n          amount,\n          currency\n        } = _ref3;\n\n        if (currency.symbol.trim() === symbol.trim()) {\n          return acc += amount;\n        }\n\n        return acc;\n      }, 0);\n      const sale = price / 100 * 21;\n      this.setState({\n        itemsBag: arr,\n        total: price,\n        quantity: itemStorage.length,\n        sale: sale,\n        bagCounter: itemStorage\n      });\n    }\n\n    return;\n  }\n\n  render() {\n    const {\n      itemsBag,\n      total,\n      arrAtrributes,\n      activePageCart,\n      quantity,\n      sale,\n      bagCounter\n    } = this.state;\n    const {\n      toggleCart,\n      getId,\n      symbol,\n      saveAtrributeArr\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: activePageCart ? \"\" : \"modal_container-bag\",\n      children: itemsBag && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: activePageCart ? \"container\" : \"\",\n        children: [activePageCart ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"cart_title\",\n          children: \"Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"bag_title\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"My bag,\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this), ` ${quantity} items`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"bag_list\",\n          children: itemsBag.map(_ref4 => {\n            let {\n              name,\n              brand,\n              gallery,\n              id,\n              attributes,\n              prices\n            } = _ref4;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: activePageCart ? \"cart_item\" : \"bag_item\",\n              id: id,\n              onMouseOver: getId,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: !activePageCart ? \"bag_container-info\" : \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: activePageCart ? \"cart_denotation\" : \"bag_denotation\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: brand\n                  }, v4(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: name\n                  }, v4(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [symbol.trim(), /*#__PURE__*/_jsxDEV(Prices, {\n                      prices: prices,\n                      symbol: symbol\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 29\n                    }, this)]\n                  }, v4(), true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 27\n                  }, this)]\n                }, v4(), true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Atrributes, {\n                  attributes: attributes,\n                  saveAtrributeArr: saveAtrributeArr,\n                  selectActive: this.selectActive,\n                  activePageCart: activePageCart,\n                  arrAtrributes: arrAtrributes,\n                  id: id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 27\n                }, this)]\n              }, v4(), true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Count, {\n                id: id,\n                activePageCart: activePageCart,\n                changeAmount: this.changeAmount,\n                bagCounter: bagCounter,\n                gallery: gallery\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 25\n              }, this)]\n            }, v4(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Total, {\n          activePageCart: activePageCart,\n          symbol: symbol,\n          sale: sale,\n          quantity: quantity,\n          total: total,\n          toggleCart: toggleCart,\n          openCart: this.openCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["Notiflix","React","Component","Prices","Atrributes","Count","Total","v4","Api","fetchProduct","ModalBag","state","itemsBag","symbol","props","total","arrAtrributes","activePageCart","cart","quantity","sale","bagCounter","toggleBackdrop","e","key","toggle","changeAmount","id","target","name","dataset","addProduct","getProductId","countBag","map","data","prices","amount","currency","trim","setState","prevState","uniqueId","uniqueProduct","arrBagCounter","JSON","parse","localStorage","getItem","bagLocalIndex","findIndex","v","splice","counterRepete","reduce","acc","val","Notify","success","includes","push","length","toggleCart","setItem","stringify","decrementBag","selectActive","unique","findUniqueKey","saveAtrribute","openCart","textContent","componentWillUnmount","window","removeEventListener","componentDidMount","arr","addEventListener","itemStorage","uniqueArrForModal","find","flatMap","price","render","getId","saveAtrributeArr","brand","gallery","attributes"],"sources":["/Users/marknelovka/Desktop/Goit/React/shop/src/components/modalBag.js"],"sourcesContent":["import Notiflix from \"notiflix\";\nimport React, { Component } from \"react\";\nimport Prices from \"./prices\";\nimport Atrributes from \"./atrributes\";\nimport Count from \"./countAndImage\";\nimport Total from \"./total\";\nimport { v4 } from \"uuid\";\nimport Api from \"./Api\";\nconst fetchProduct = new Api();\nexport default class ModalBag extends Component {\n  state = {\n    itemsBag: null,\n    symbol: this.props.symbol,\n    total: 0,\n    arrAtrributes: [],\n    activePageCart: this.props.cart,\n    quantity: 0,\n    sale: 0,\n    bagCounter: null,\n  };\n\n  toggleBackdrop = (e) => {\n    if (e.key === \"Escape\") {\n      return this.props.toggle();\n    }\n    return;\n  };\n\n  componentWillUnmount() {\n    return window.removeEventListener(\"keydown\", this.toggleBackdrop);\n  }\n\n  componentDidMount() {\n    const arr = [];\n    window.addEventListener(\"keydown\", this.toggleBackdrop);\n    const { symbol } = this.state;\n\n    const itemStorage = JSON.parse(localStorage.getItem(\"productItems\"));\n    if (itemStorage) {\n      for (let data of itemStorage) {\n        const uniqueArrForModal = arr.find((v) => v.id === data.id);\n        if (!uniqueArrForModal) {\n          arr.push(data);\n        }\n      }\n      const prices = itemStorage.flatMap((data) => {\n        return data.prices;\n      });\n\n      const price = prices.reduce((acc, { amount, currency }) => {\n        if (currency.symbol.trim() === symbol.trim()) {\n          return (acc += amount);\n        }\n        return acc;\n      }, 0);\n\n      const sale = (price / 100) * 21;\n\n      this.setState({\n        itemsBag: arr,\n        total: price,\n        quantity: itemStorage.length,\n        sale: sale,\n        bagCounter: itemStorage,\n      });\n    }\n    return;\n  }\n\n  changeAmount = async (e) => {\n    const { id } = e.target;\n    const { name } = e.target.dataset;\n    const { itemsBag, symbol, total } = this.state;\n\n    switch (name) {\n      case \"increment\":\n        const addProduct = await fetchProduct.getProductId(id);\n        this.props.countBag(e);\n        itemsBag.map((data) => {\n          if (data.id === id) {\n            data.prices.map(({ amount, currency }) => {\n              if (currency.symbol.trim() === symbol.trim()) {\n                this.setState((prevState) => ({\n                  total: prevState.total + amount,\n                }));\n              }\n              return data;\n            });\n          }\n          return total;\n        });\n\n        this.setState((prevState) => ({\n          sale: (prevState.total / 100) * 21,\n          quantity: prevState.quantity + 1,\n          bagCounter: [...prevState.bagCounter, ...addProduct],\n        }));\n        break;\n      case \"decrement\":\n        const uniqueId = [];\n        const uniqueProduct = [];\n        const arrBagCounter = JSON.parse(localStorage.getItem(\"productItems\"));\n        const bagLocalIndex = arrBagCounter.findIndex((v) => v.id === id);\n        arrBagCounter.splice(bagLocalIndex, 1);\n        const counterRepete = arrBagCounter.reduce((acc, val) => {\n          if (id === val.id) {\n            acc += 1;\n          }\n          return acc;\n        }, 0);\n\n        if (counterRepete === 0) {\n          Notiflix.Notify.success(\"Item has been removed from cart\");\n          for (let data of arrBagCounter) {\n            if (!uniqueId.includes(data.id)) {\n              uniqueId.push(data.id);\n              uniqueProduct.push(data);\n            }\n          }\n          this.setState({ itemsBag: uniqueProduct });\n        }\n        if (arrBagCounter.length < 1) {\n          if (this.props.cart) {\n            this.props.toggleCart();\n          } else {\n            this.props.toggle();\n          }\n        }\n        localStorage.setItem(\"productItems\", JSON.stringify(arrBagCounter));\n        this.props.decrementBag(arrBagCounter);\n        itemsBag.map((data) => {\n          if (data.id === id) {\n            data.prices.map(({ amount, currency }) => {\n              if (currency.symbol.trim() === symbol.trim()) {\n                this.setState((prevState) => ({\n                  total: prevState.total - amount,\n                }));\n              }\n              return data;\n            });\n          }\n          return total;\n        });\n        this.setState((prevState) => ({\n          sale: (prevState.total / 100) * 21,\n          quantity: prevState.quantity - 1,\n          bagCounter: arrBagCounter,\n        }));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  selectActive = (e) => {\n    const { unique } = e.target.dataset;\n    if (this.state.arrAtrributes.includes(unique)) {\n      const findUniqueKey = this.state.arrAtrributes.findIndex(\n        (v) => v === unique\n      );\n      this.state.arrAtrributes.splice(findUniqueKey, 1);\n      const state = this.state.arrAtrributes;\n      this.props.saveAtrribute(unique);\n      this.setState({ arrAtrributes: state });\n      return;\n    }\n    this.props.saveAtrribute(unique);\n    this.setState((prevState) => ({\n      arrAtrributes: [...prevState.arrAtrributes, unique],\n    }));\n  };\n\n  openCart = (e) => {\n    const { textContent } = e.target;\n    this.props.toggle();\n    this.props.toggleCart(textContent);\n  };\n\n  render() {\n    const {\n      itemsBag,\n      total,\n      arrAtrributes,\n      activePageCart,\n      quantity,\n      sale,\n      bagCounter,\n    } = this.state;\n    const { toggleCart, getId, symbol, saveAtrributeArr } = this.props;\n    return (\n      <div className={activePageCart ? \"\" : \"modal_container-bag\"}>\n        {itemsBag && (\n          <div className={activePageCart ? \"container\" : \"\"}>\n            {activePageCart ? (\n              <p className=\"cart_title\">Cart</p>\n            ) : (\n              <p className=\"bag_title\">\n                <span>My bag,</span>\n                {` ${quantity} items`}\n              </p>\n            )}\n\n            <ul className=\"bag_list\">\n              {itemsBag.map(\n                ({ name, brand, gallery, id, attributes, prices }) => {\n                  return (\n                    <li\n                      key={v4()}\n                      className={activePageCart ? \"cart_item\" : \"bag_item\"}\n                      id={id}\n                      onMouseOver={getId}\n                    >\n                      <div\n                        className={!activePageCart ? \"bag_container-info\" : \"\"}\n                        key={v4()}\n                      >\n                        <div\n                          key={v4()}\n                          className={\n                            activePageCart\n                              ? \"cart_denotation\"\n                              : \"bag_denotation\"\n                          }\n                        >\n                          <p key={v4()}>{brand}</p>\n                          <p key={v4()}>{name}</p>\n                          <p key={v4()}>\n                            {symbol.trim()}\n                            <Prices prices={prices} symbol={symbol} />\n                          </p>\n                        </div>\n                        {\n                          <Atrributes\n                            attributes={attributes}\n                            saveAtrributeArr={saveAtrributeArr}\n                            selectActive={this.selectActive}\n                            activePageCart={activePageCart}\n                            arrAtrributes={arrAtrributes}\n                            id={id}\n                          />\n                        }\n                      </div>\n                      {\n                        <Count\n                          id={id}\n                          activePageCart={activePageCart}\n                          changeAmount={this.changeAmount}\n                          bagCounter={bagCounter}\n                          gallery={gallery}\n                        />\n                      }\n                    </li>\n                  );\n                }\n              )}\n            </ul>\n            {\n              <Total\n                activePageCart={activePageCart}\n                symbol={symbol}\n                sale={sale}\n                quantity={quantity}\n                total={total}\n                toggleCart={toggleCart}\n                openCart={this.openCart}\n              />\n            }\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AACA,MAAMC,YAAY,GAAG,IAAID,GAAJ,EAArB;AACA,eAAe,MAAME,QAAN,SAAuBR,SAAvB,CAAiC;EAAA;IAAA;IAAA,KAC9CS,KAD8C,GACtC;MACNC,QAAQ,EAAE,IADJ;MAENC,MAAM,EAAE,KAAKC,KAAL,CAAWD,MAFb;MAGNE,KAAK,EAAE,CAHD;MAINC,aAAa,EAAE,EAJT;MAKNC,cAAc,EAAE,KAAKH,KAAL,CAAWI,IALrB;MAMNC,QAAQ,EAAE,CANJ;MAONC,IAAI,EAAE,CAPA;MAQNC,UAAU,EAAE;IARN,CADsC;;IAAA,KAY9CC,cAZ8C,GAY5BC,CAAD,IAAO;MACtB,IAAIA,CAAC,CAACC,GAAF,KAAU,QAAd,EAAwB;QACtB,OAAO,KAAKV,KAAL,CAAWW,MAAX,EAAP;MACD;;MACD;IACD,CAjB6C;;IAAA,KA4D9CC,YA5D8C,GA4D/B,MAAOH,CAAP,IAAa;MAC1B,MAAM;QAAEI;MAAF,IAASJ,CAAC,CAACK,MAAjB;MACA,MAAM;QAAEC;MAAF,IAAWN,CAAC,CAACK,MAAF,CAASE,OAA1B;MACA,MAAM;QAAElB,QAAF;QAAYC,MAAZ;QAAoBE;MAApB,IAA8B,KAAKJ,KAAzC;;MAEA,QAAQkB,IAAR;QACE,KAAK,WAAL;UACE,MAAME,UAAU,GAAG,MAAMtB,YAAY,CAACuB,YAAb,CAA0BL,EAA1B,CAAzB;UACA,KAAKb,KAAL,CAAWmB,QAAX,CAAoBV,CAApB;UACAX,QAAQ,CAACsB,GAAT,CAAcC,IAAD,IAAU;YACrB,IAAIA,IAAI,CAACR,EAAL,KAAYA,EAAhB,EAAoB;cAClBQ,IAAI,CAACC,MAAL,CAAYF,GAAZ,CAAgB,QAA0B;gBAAA,IAAzB;kBAAEG,MAAF;kBAAUC;gBAAV,CAAyB;;gBACxC,IAAIA,QAAQ,CAACzB,MAAT,CAAgB0B,IAAhB,OAA2B1B,MAAM,CAAC0B,IAAP,EAA/B,EAA8C;kBAC5C,KAAKC,QAAL,CAAeC,SAAD,KAAgB;oBAC5B1B,KAAK,EAAE0B,SAAS,CAAC1B,KAAV,GAAkBsB;kBADG,CAAhB,CAAd;gBAGD;;gBACD,OAAOF,IAAP;cACD,CAPD;YAQD;;YACD,OAAOpB,KAAP;UACD,CAZD;UAcA,KAAKyB,QAAL,CAAeC,SAAD,KAAgB;YAC5BrB,IAAI,EAAGqB,SAAS,CAAC1B,KAAV,GAAkB,GAAnB,GAA0B,EADJ;YAE5BI,QAAQ,EAAEsB,SAAS,CAACtB,QAAV,GAAqB,CAFH;YAG5BE,UAAU,EAAE,CAAC,GAAGoB,SAAS,CAACpB,UAAd,EAA0B,GAAGU,UAA7B;UAHgB,CAAhB,CAAd;UAKA;;QACF,KAAK,WAAL;UACE,MAAMW,QAAQ,GAAG,EAAjB;UACA,MAAMC,aAAa,GAAG,EAAtB;UACA,MAAMC,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAAtB;UACA,MAAMC,aAAa,GAAGL,aAAa,CAACM,SAAd,CAAyBC,CAAD,IAAOA,CAAC,CAACxB,EAAF,KAASA,EAAxC,CAAtB;UACAiB,aAAa,CAACQ,MAAd,CAAqBH,aAArB,EAAoC,CAApC;UACA,MAAMI,aAAa,GAAGT,aAAa,CAACU,MAAd,CAAqB,CAACC,GAAD,EAAMC,GAAN,KAAc;YACvD,IAAI7B,EAAE,KAAK6B,GAAG,CAAC7B,EAAf,EAAmB;cACjB4B,GAAG,IAAI,CAAP;YACD;;YACD,OAAOA,GAAP;UACD,CALqB,EAKnB,CALmB,CAAtB;;UAOA,IAAIF,aAAa,KAAK,CAAtB,EAAyB;YACvBrD,QAAQ,CAACyD,MAAT,CAAgBC,OAAhB,CAAwB,iCAAxB;;YACA,KAAK,IAAIvB,IAAT,IAAiBS,aAAjB,EAAgC;cAC9B,IAAI,CAACF,QAAQ,CAACiB,QAAT,CAAkBxB,IAAI,CAACR,EAAvB,CAAL,EAAiC;gBAC/Be,QAAQ,CAACkB,IAAT,CAAczB,IAAI,CAACR,EAAnB;gBACAgB,aAAa,CAACiB,IAAd,CAAmBzB,IAAnB;cACD;YACF;;YACD,KAAKK,QAAL,CAAc;cAAE5B,QAAQ,EAAE+B;YAAZ,CAAd;UACD;;UACD,IAAIC,aAAa,CAACiB,MAAd,GAAuB,CAA3B,EAA8B;YAC5B,IAAI,KAAK/C,KAAL,CAAWI,IAAf,EAAqB;cACnB,KAAKJ,KAAL,CAAWgD,UAAX;YACD,CAFD,MAEO;cACL,KAAKhD,KAAL,CAAWW,MAAX;YACD;UACF;;UACDsB,YAAY,CAACgB,OAAb,CAAqB,cAArB,EAAqClB,IAAI,CAACmB,SAAL,CAAepB,aAAf,CAArC;UACA,KAAK9B,KAAL,CAAWmD,YAAX,CAAwBrB,aAAxB;UACAhC,QAAQ,CAACsB,GAAT,CAAcC,IAAD,IAAU;YACrB,IAAIA,IAAI,CAACR,EAAL,KAAYA,EAAhB,EAAoB;cAClBQ,IAAI,CAACC,MAAL,CAAYF,GAAZ,CAAgB,SAA0B;gBAAA,IAAzB;kBAAEG,MAAF;kBAAUC;gBAAV,CAAyB;;gBACxC,IAAIA,QAAQ,CAACzB,MAAT,CAAgB0B,IAAhB,OAA2B1B,MAAM,CAAC0B,IAAP,EAA/B,EAA8C;kBAC5C,KAAKC,QAAL,CAAeC,SAAD,KAAgB;oBAC5B1B,KAAK,EAAE0B,SAAS,CAAC1B,KAAV,GAAkBsB;kBADG,CAAhB,CAAd;gBAGD;;gBACD,OAAOF,IAAP;cACD,CAPD;YAQD;;YACD,OAAOpB,KAAP;UACD,CAZD;UAaA,KAAKyB,QAAL,CAAeC,SAAD,KAAgB;YAC5BrB,IAAI,EAAGqB,SAAS,CAAC1B,KAAV,GAAkB,GAAnB,GAA0B,EADJ;YAE5BI,QAAQ,EAAEsB,SAAS,CAACtB,QAAV,GAAqB,CAFH;YAG5BE,UAAU,EAAEuB;UAHgB,CAAhB,CAAd;UAKA;;QAEF;UACE;MA7EJ;IA+ED,CAhJ6C;;IAAA,KAkJ9CsB,YAlJ8C,GAkJ9B3C,CAAD,IAAO;MACpB,MAAM;QAAE4C;MAAF,IAAa5C,CAAC,CAACK,MAAF,CAASE,OAA5B;;MACA,IAAI,KAAKnB,KAAL,CAAWK,aAAX,CAAyB2C,QAAzB,CAAkCQ,MAAlC,CAAJ,EAA+C;QAC7C,MAAMC,aAAa,GAAG,KAAKzD,KAAL,CAAWK,aAAX,CAAyBkC,SAAzB,CACnBC,CAAD,IAAOA,CAAC,KAAKgB,MADO,CAAtB;QAGA,KAAKxD,KAAL,CAAWK,aAAX,CAAyBoC,MAAzB,CAAgCgB,aAAhC,EAA+C,CAA/C;QACA,MAAMzD,KAAK,GAAG,KAAKA,KAAL,CAAWK,aAAzB;QACA,KAAKF,KAAL,CAAWuD,aAAX,CAAyBF,MAAzB;QACA,KAAK3B,QAAL,CAAc;UAAExB,aAAa,EAAEL;QAAjB,CAAd;QACA;MACD;;MACD,KAAKG,KAAL,CAAWuD,aAAX,CAAyBF,MAAzB;MACA,KAAK3B,QAAL,CAAeC,SAAD,KAAgB;QAC5BzB,aAAa,EAAE,CAAC,GAAGyB,SAAS,CAACzB,aAAd,EAA6BmD,MAA7B;MADa,CAAhB,CAAd;IAGD,CAlK6C;;IAAA,KAoK9CG,QApK8C,GAoKlC/C,CAAD,IAAO;MAChB,MAAM;QAAEgD;MAAF,IAAkBhD,CAAC,CAACK,MAA1B;MACA,KAAKd,KAAL,CAAWW,MAAX;MACA,KAAKX,KAAL,CAAWgD,UAAX,CAAsBS,WAAtB;IACD,CAxK6C;EAAA;;EAmB9CC,oBAAoB,GAAG;IACrB,OAAOC,MAAM,CAACC,mBAAP,CAA2B,SAA3B,EAAsC,KAAKpD,cAA3C,CAAP;EACD;;EAEDqD,iBAAiB,GAAG;IAClB,MAAMC,GAAG,GAAG,EAAZ;IACAH,MAAM,CAACI,gBAAP,CAAwB,SAAxB,EAAmC,KAAKvD,cAAxC;IACA,MAAM;MAAET;IAAF,IAAa,KAAKF,KAAxB;IAEA,MAAMmE,WAAW,GAAGjC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAApB;;IACA,IAAI8B,WAAJ,EAAiB;MACf,KAAK,IAAI3C,IAAT,IAAiB2C,WAAjB,EAA8B;QAC5B,MAAMC,iBAAiB,GAAGH,GAAG,CAACI,IAAJ,CAAU7B,CAAD,IAAOA,CAAC,CAACxB,EAAF,KAASQ,IAAI,CAACR,EAA9B,CAA1B;;QACA,IAAI,CAACoD,iBAAL,EAAwB;UACtBH,GAAG,CAAChB,IAAJ,CAASzB,IAAT;QACD;MACF;;MACD,MAAMC,MAAM,GAAG0C,WAAW,CAACG,OAAZ,CAAqB9C,IAAD,IAAU;QAC3C,OAAOA,IAAI,CAACC,MAAZ;MACD,CAFc,CAAf;MAIA,MAAM8C,KAAK,GAAG9C,MAAM,CAACkB,MAAP,CAAc,CAACC,GAAD,YAA+B;QAAA,IAAzB;UAAElB,MAAF;UAAUC;QAAV,CAAyB;;QACzD,IAAIA,QAAQ,CAACzB,MAAT,CAAgB0B,IAAhB,OAA2B1B,MAAM,CAAC0B,IAAP,EAA/B,EAA8C;UAC5C,OAAQgB,GAAG,IAAIlB,MAAf;QACD;;QACD,OAAOkB,GAAP;MACD,CALa,EAKX,CALW,CAAd;MAOA,MAAMnC,IAAI,GAAI8D,KAAK,GAAG,GAAT,GAAgB,EAA7B;MAEA,KAAK1C,QAAL,CAAc;QACZ5B,QAAQ,EAAEgE,GADE;QAEZ7D,KAAK,EAAEmE,KAFK;QAGZ/D,QAAQ,EAAE2D,WAAW,CAACjB,MAHV;QAIZzC,IAAI,EAAEA,IAJM;QAKZC,UAAU,EAAEyD;MALA,CAAd;IAOD;;IACD;EACD;;EAgHDK,MAAM,GAAG;IACP,MAAM;MACJvE,QADI;MAEJG,KAFI;MAGJC,aAHI;MAIJC,cAJI;MAKJE,QALI;MAMJC,IANI;MAOJC;IAPI,IAQF,KAAKV,KART;IASA,MAAM;MAAEmD,UAAF;MAAcsB,KAAd;MAAqBvE,MAArB;MAA6BwE;IAA7B,IAAkD,KAAKvE,KAA7D;IACA,oBACE;MAAK,SAAS,EAAEG,cAAc,GAAG,EAAH,GAAQ,qBAAtC;MAAA,UACGL,QAAQ,iBACP;QAAK,SAAS,EAAEK,cAAc,GAAG,WAAH,GAAiB,EAA/C;QAAA,WACGA,cAAc,gBACb;UAAG,SAAS,EAAC,YAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADa,gBAGb;UAAG,SAAS,EAAC,WAAb;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,EAEI,IAAGE,QAAS,QAFhB;QAAA;UAAA;UAAA;UAAA;QAAA,QAJJ,eAUE;UAAI,SAAS,EAAC,UAAd;UAAA,UACGP,QAAQ,CAACsB,GAAT,CACC,SAAsD;YAAA,IAArD;cAAEL,IAAF;cAAQyD,KAAR;cAAeC,OAAf;cAAwB5D,EAAxB;cAA4B6D,UAA5B;cAAwCpD;YAAxC,CAAqD;YACpD,oBACE;cAEE,SAAS,EAAEnB,cAAc,GAAG,WAAH,GAAiB,UAF5C;cAGE,EAAE,EAAEU,EAHN;cAIE,WAAW,EAAEyD,KAJf;cAAA,wBAME;gBACE,SAAS,EAAE,CAACnE,cAAD,GAAkB,oBAAlB,GAAyC,EADtD;gBAAA,wBAIE;kBAEE,SAAS,EACPA,cAAc,GACV,iBADU,GAEV,gBALR;kBAAA,wBAQE;oBAAA,UAAeqE;kBAAf,GAAQ/E,EAAE,EAAV;oBAAA;oBAAA;oBAAA;kBAAA,QARF,eASE;oBAAA,UAAesB;kBAAf,GAAQtB,EAAE,EAAV;oBAAA;oBAAA;oBAAA;kBAAA,QATF,eAUE;oBAAA,WACGM,MAAM,CAAC0B,IAAP,EADH,eAEE,QAAC,MAAD;sBAAQ,MAAM,EAAEH,MAAhB;sBAAwB,MAAM,EAAEvB;oBAAhC;sBAAA;sBAAA;sBAAA;oBAAA,QAFF;kBAAA,GAAQN,EAAE,EAAV;oBAAA;oBAAA;oBAAA;kBAAA,QAVF;gBAAA,GACOA,EAAE,EADT;kBAAA;kBAAA;kBAAA;gBAAA,QAJF,eAoBI,QAAC,UAAD;kBACE,UAAU,EAAEiF,UADd;kBAEE,gBAAgB,EAAEH,gBAFpB;kBAGE,YAAY,EAAE,KAAKnB,YAHrB;kBAIE,cAAc,EAAEjD,cAJlB;kBAKE,aAAa,EAAED,aALjB;kBAME,EAAE,EAAEW;gBANN;kBAAA;kBAAA;kBAAA;gBAAA,QApBJ;cAAA,GAEOpB,EAAE,EAFT;gBAAA;gBAAA;gBAAA;cAAA,QANF,eAqCI,QAAC,KAAD;gBACE,EAAE,EAAEoB,EADN;gBAEE,cAAc,EAAEV,cAFlB;gBAGE,YAAY,EAAE,KAAKS,YAHrB;gBAIE,UAAU,EAAEL,UAJd;gBAKE,OAAO,EAAEkE;cALX;gBAAA;gBAAA;gBAAA;cAAA,QArCJ;YAAA,GACOhF,EAAE,EADT;cAAA;cAAA;cAAA;YAAA,QADF;UAgDD,CAlDF;QADH;UAAA;UAAA;UAAA;QAAA,QAVF,eAiEI,QAAC,KAAD;UACE,cAAc,EAAEU,cADlB;UAEE,MAAM,EAAEJ,MAFV;UAGE,IAAI,EAAEO,IAHR;UAIE,QAAQ,EAAED,QAJZ;UAKE,KAAK,EAAEJ,KALT;UAME,UAAU,EAAE+C,UANd;UAOE,QAAQ,EAAE,KAAKQ;QAPjB;UAAA;UAAA;UAAA;QAAA,QAjEJ;MAAA;QAAA;QAAA;QAAA;MAAA;IAFJ;MAAA;MAAA;MAAA;IAAA,QADF;EAkFD;;AAvQ6C"},"metadata":{},"sourceType":"module"}