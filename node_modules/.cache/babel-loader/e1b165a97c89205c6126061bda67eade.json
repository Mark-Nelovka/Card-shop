{"ast":null,"code":"import { gql } from \"@apollo/client\";\nimport { client } from \"../index\";\nimport { Component } from \"react\";\nexport default class Api extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.getAllProduct = async () => {\n      try {\n        const products = await client.query({\n          query: gql`\n          query {\n            category {\n              products {\n                id\n                category\n                gallery\n                brand\n                inStock\n                description\n\n                name\n                prices {\n                  amount\n                  currency {\n                    symbol\n                  }\n                }\n              }\n            }\n          }\n        `\n        });\n        return products.data.category.products;\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    this.getProductId = async id => {\n      try {\n        const product = await client.query({\n          query: gql`\n          query {\n            product(id: \"${id}\") {\n              name\n              brand\n               description\n               prices {\n    amount\n    currency {\n      symbol\n    }\n  }\n              gallery \n              id\n              attributes {\n                id\n                items {\n                  value\n                }\n              }\n            }\n          }\n        `\n        });\n        return [product.data.product];\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.getCurrencies = async () => {\n      try {\n        const currencies = await client.query({\n          query: gql`\n          query {\n            currencies {\n              label\n              symbol\n            }\n          }\n        `\n        });\n        return currencies.data.currencies;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.getItemFromCategory = async () => {\n      try {\n        const items = await client.query({\n          query: gql`\n          query {\n            categories {\n              name\n              products {\n                name\n                id\n                brand\n                prices {\n                  amount\n                  currency {\n                    label\n                    symbol\n                  }\n                }\n                inStock\n                gallery\n                category\n              }\n            }\n          }\n        `\n        });\n        console.log(items.data.data); // return currencies.data.currencies;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }\n\n}","map":{"version":3,"names":["gql","client","Component","Api","getAllProduct","products","query","data","category","error","console","log","message","getProductId","id","product","getCurrencies","currencies","getItemFromCategory","items"],"sources":["/Users/marknelovka/Desktop/Goit/React/shop/src/components/Api.js"],"sourcesContent":["import { gql } from \"@apollo/client\";\nimport { client } from \"../index\";\nimport { Component } from \"react\";\n\nexport default class Api extends Component {\n  getAllProduct = async () => {\n    try {\n      const products = await client.query({\n        query: gql`\n          query {\n            category {\n              products {\n                id\n                category\n                gallery\n                brand\n                inStock\n                description\n\n                name\n                prices {\n                  amount\n                  currency {\n                    symbol\n                  }\n                }\n              }\n            }\n          }\n        `,\n      });\n      return products.data.category.products;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  getProductId = async (id) => {\n    try {\n      const product = await client.query({\n        query: gql`\n          query {\n            product(id: \"${id}\") {\n              name\n              brand\n               description\n               prices {\n    amount\n    currency {\n      symbol\n    }\n  }\n              gallery \n              id\n              attributes {\n                id\n                items {\n                  value\n                }\n              }\n            }\n          }\n        `,\n      });\n      return [product.data.product];\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  getCurrencies = async () => {\n    try {\n      const currencies = await client.query({\n        query: gql`\n          query {\n            currencies {\n              label\n              symbol\n            }\n          }\n        `,\n      });\n      return currencies.data.currencies;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  getItemFromCategory = async () => {\n    try {\n      const items = await client.query({\n        query: gql`\n          query {\n            categories {\n              name\n              products {\n                name\n                id\n                brand\n                prices {\n                  amount\n                  currency {\n                    label\n                    symbol\n                  }\n                }\n                inStock\n                gallery\n                category\n              }\n            }\n          }\n        `,\n      });\n      console.log(items.data.data);\n      // return currencies.data.currencies;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,eAAe,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;EAAA;IAAA;;IAAA,KACzCE,aADyC,GACzB,YAAY;MAC1B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMJ,MAAM,CAACK,KAAP,CAAa;UAClCA,KAAK,EAAEN,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QAtB0C,CAAb,CAAvB;QAwBA,OAAOK,QAAQ,CAACE,IAAT,CAAcC,QAAd,CAAuBH,QAA9B;MACD,CA1BD,CA0BE,OAAOI,KAAP,EAAc;QACdC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;MACD;IACF,CA/BwC;;IAAA,KAiCzCC,YAjCyC,GAiC1B,MAAOC,EAAP,IAAc;MAC3B,IAAI;QACF,MAAMC,OAAO,GAAG,MAAMd,MAAM,CAACK,KAAP,CAAa;UACjCA,KAAK,EAAEN,GAAI;AACnB;AACA,2BAA2Bc,EAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QAvByC,CAAb,CAAtB;QAyBA,OAAO,CAACC,OAAO,CAACR,IAAR,CAAaQ,OAAd,CAAP;MACD,CA3BD,CA2BE,OAAON,KAAP,EAAc;QACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACD;IACF,CAhEwC;;IAAA,KAkEzCO,aAlEyC,GAkEzB,YAAY;MAC1B,IAAI;QACF,MAAMC,UAAU,GAAG,MAAMhB,MAAM,CAACK,KAAP,CAAa;UACpCA,KAAK,EAAEN,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;QAR4C,CAAb,CAAzB;QAUA,OAAOiB,UAAU,CAACV,IAAX,CAAgBU,UAAvB;MACD,CAZD,CAYE,OAAOR,KAAP,EAAc;QACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACD;IACF,CAlFwC;;IAAA,KAoFzCS,mBApFyC,GAoFnB,YAAY;MAChC,IAAI;QACF,MAAMC,KAAK,GAAG,MAAMlB,MAAM,CAACK,KAAP,CAAa;UAC/BA,KAAK,EAAEN,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QAtBuC,CAAb,CAApB;QAwBAU,OAAO,CAACC,GAAR,CAAYQ,KAAK,CAACZ,IAAN,CAAWA,IAAvB,EAzBE,CA0BF;MACD,CA3BD,CA2BE,OAAOE,KAAP,EAAc;QACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACD;IACF,CAnHwC;EAAA;;AAAA"},"metadata":{},"sourceType":"module"}