{"ast":null,"code":"// import { Component } from \"react\";\n// import Basket from \"../images/Basket_card.svg\";\n// import ModalBag from \"./modalBag\";\n// import Api from \"./Api\";\n// const fetchProduct = new Api();\n// export default class HomePage extends Component {\n//   state = {\n//     showBasker: false,\n//     productAll: [],\n//     id: \"\",\n//     priceHomePage: [],\n//     activeS: \"\",\n//     bag: [],\n//   };\n//   async componentDidMount() {\n//     const activeCur = localStorage.getItem(\"currencySymbol\");\n//     const qwe = JSON.parse(localStorage.getItem(\"qwe\"));\n//     if (qwe) {\n//       this.setState({ bag: qwe });\n//     }\n//     this.setState({ activeS: activeCur });\n//     const result = await fetchProduct.getAllProduct();\n//     const products = result.map(\n//       ({ gallery, id, name, prices, brand, inStock }) => {\n//         const obj = {\n//           product: gallery[0],\n//           id: id,\n//           name,\n//           brand,\n//           price: prices,\n//           inStock,\n//         };\n//         return obj;\n//       }\n//     );\n//     this.setState({ productAll: products });\n//     for (let data of products) {\n//       data.price.map(({ amount, currency }) => {\n//         if (currency.symbol.trim() === this.state.activeS.trim()) {\n//           return this.setState((prevState) => {\n//             return prevState.priceHomePage.push(amount);\n//           });\n//         }\n//         return amount;\n//       });\n//     }\n//   }\n//   componentDidUpdate(prev, state) {\n//     if (state.activeS !== this.props.symbolCard) {\n//       state.activeS = this.props.symbolCard;\n//       if (state.priceHomePage.length > 0) {\n//         state.priceHomePage = [];\n//       }\n//       for (let data of state.productAll) {\n//         data.price.map(({ amount, currency }) => {\n//           if (currency.symbol.trim() === this.props.symbolCard.trim()) {\n//             return this.setState((prevState) => {\n//               return prevState.priceHomePage.push(amount);\n//             });\n//           }\n//           return amount;\n//         });\n//       }\n//       return;\n//     }\n//   }\n//   id = (e) => {\n//     const { id } = e.currentTarget;\n//     switch (e._reactName) {\n//       case \"onMouseOver\":\n//         this.setState({ id: id });\n//         break;\n//       case \"onMouseLeave\":\n//         this.setState({ id: \"\" });\n//         break;\n//       default:\n//         break;\n//     }\n//   };\n//   addBag = async (e) => {\n//     const { id } = e.currentTarget;\n//     const { bag } = this.state;\n//     const product = await fetchProduct.getProductId(id);\n//     const unique = bag.find((val) => val.id === id);\n//     if (!unique) {\n//       this.setState((prevState) => ({\n//         bag: [...prevState.bag, ...product],\n//       }));\n//       this.props.itemBag([...product, ...bag]);\n//       return localStorage.setItem(\n//         \"productItems\",\n//         JSON.stringify([...product, ...bag])\n//       );\n//     }\n//   };\n//   render() {\n//     const { productAll, priceHomePage } = this.state;\n//     const { symbolCard, modalBag, toggle } = this.props;\n//     return (\n//       <main className=\"container\">\n//         <div className={modalBag ? \"backdrop\" : \"\"}></div>\n//         <p className=\"category-name\">Category name</p>\n//         <ul className=\"gallery_list\">\n//           {productAll.length > 0 &&\n//             productAll.map(\n//               ({ product, id, name, price, brand, inStock }, inx) => {\n//                 return (\n//                   <li\n//                     // onClick={this.qwe}\n//                     onMouseOver={this.id}\n//                     onMouseLeave={this.id}\n//                     id={id}\n//                     className={\n//                       inStock ? \"gallery_item\" : \"gallery_item--disabled\"\n//                     }\n//                     key={id}\n//                   >\n//                     <img\n//                       width=\"354\"\n//                       height=\"330\"\n//                       src={product}\n//                       alt=\"our products\"\n//                     />\n//                     <p\n//                       className={\n//                         inStock ? \"gallery_brand\" : \"gallery_brand--disabled\"\n//                       }\n//                     >\n//                       {brand}\n//                       {name}\n//                     </p>\n//                     <p\n//                       className={\n//                         inStock ? \"gallery_price\" : \"gallery_price--disabled\"\n//                       }\n//                     >\n//                       {symbolCard}\n//                       {productAll.length > 0 &&\n//                         price.map((data) => {\n//                           return priceHomePage\n//                             .filter((val, ind, arr) => arr.indexOf(val) === ind)\n//                             .find((val, ind) => {\n//                               if (\n//                                 inx === ind &&\n//                                 val === data.amount &&\n//                                 data.currency.symbol.trim() ===\n//                                   symbolCard.trim()\n//                               ) {\n//                                 return val;\n//                               }\n//                               return null;\n//                             });\n//                         })}\n//                     </p>\n//                     {id === this.state.id && inStock && (\n//                       <button\n//                         id={id}\n//                         onClick={this.addBag}\n//                         className=\"btn_add-basket\"\n//                       >\n//                         <img src={Basket} alt=\"Add to basket\" />\n//                       </button>\n//                     )}\n//                     {!inStock && <p className=\"gallery_out\">OUT OF STOCK</p>}\n//                   </li>\n//                 );\n//               }\n//             )}\n//         </ul>\n//         {modalBag && <ModalBag symbol={symbolCard} toggle={toggle} />}\n//       </main>\n//     );\n//   }\n// }","map":{"version":3,"names":[],"sources":["/Users/marknelovka/Desktop/Goit/React/shop/src/components/homePage.js"],"sourcesContent":["// import { Component } from \"react\";\n// import Basket from \"../images/Basket_card.svg\";\n// import ModalBag from \"./modalBag\";\n// import Api from \"./Api\";\n// const fetchProduct = new Api();\n\n// export default class HomePage extends Component {\n//   state = {\n//     showBasker: false,\n//     productAll: [],\n//     id: \"\",\n//     priceHomePage: [],\n//     activeS: \"\",\n//     bag: [],\n//   };\n\n//   async componentDidMount() {\n//     const activeCur = localStorage.getItem(\"currencySymbol\");\n//     const qwe = JSON.parse(localStorage.getItem(\"qwe\"));\n//     if (qwe) {\n//       this.setState({ bag: qwe });\n//     }\n//     this.setState({ activeS: activeCur });\n//     const result = await fetchProduct.getAllProduct();\n//     const products = result.map(\n//       ({ gallery, id, name, prices, brand, inStock }) => {\n//         const obj = {\n//           product: gallery[0],\n//           id: id,\n//           name,\n//           brand,\n//           price: prices,\n//           inStock,\n//         };\n//         return obj;\n//       }\n//     );\n//     this.setState({ productAll: products });\n\n//     for (let data of products) {\n//       data.price.map(({ amount, currency }) => {\n//         if (currency.symbol.trim() === this.state.activeS.trim()) {\n//           return this.setState((prevState) => {\n//             return prevState.priceHomePage.push(amount);\n//           });\n//         }\n//         return amount;\n//       });\n//     }\n//   }\n\n//   componentDidUpdate(prev, state) {\n//     if (state.activeS !== this.props.symbolCard) {\n//       state.activeS = this.props.symbolCard;\n//       if (state.priceHomePage.length > 0) {\n//         state.priceHomePage = [];\n//       }\n//       for (let data of state.productAll) {\n//         data.price.map(({ amount, currency }) => {\n//           if (currency.symbol.trim() === this.props.symbolCard.trim()) {\n//             return this.setState((prevState) => {\n//               return prevState.priceHomePage.push(amount);\n//             });\n//           }\n//           return amount;\n//         });\n//       }\n//       return;\n//     }\n//   }\n\n//   id = (e) => {\n//     const { id } = e.currentTarget;\n//     switch (e._reactName) {\n//       case \"onMouseOver\":\n//         this.setState({ id: id });\n//         break;\n//       case \"onMouseLeave\":\n//         this.setState({ id: \"\" });\n//         break;\n\n//       default:\n//         break;\n//     }\n//   };\n\n//   addBag = async (e) => {\n//     const { id } = e.currentTarget;\n//     const { bag } = this.state;\n//     const product = await fetchProduct.getProductId(id);\n//     const unique = bag.find((val) => val.id === id);\n//     if (!unique) {\n//       this.setState((prevState) => ({\n//         bag: [...prevState.bag, ...product],\n//       }));\n//       this.props.itemBag([...product, ...bag]);\n//       return localStorage.setItem(\n//         \"productItems\",\n//         JSON.stringify([...product, ...bag])\n//       );\n//     }\n//   };\n\n//   render() {\n//     const { productAll, priceHomePage } = this.state;\n//     const { symbolCard, modalBag, toggle } = this.props;\n//     return (\n//       <main className=\"container\">\n//         <div className={modalBag ? \"backdrop\" : \"\"}></div>\n//         <p className=\"category-name\">Category name</p>\n//         <ul className=\"gallery_list\">\n//           {productAll.length > 0 &&\n//             productAll.map(\n//               ({ product, id, name, price, brand, inStock }, inx) => {\n//                 return (\n//                   <li\n//                     // onClick={this.qwe}\n//                     onMouseOver={this.id}\n//                     onMouseLeave={this.id}\n//                     id={id}\n//                     className={\n//                       inStock ? \"gallery_item\" : \"gallery_item--disabled\"\n//                     }\n//                     key={id}\n//                   >\n//                     <img\n//                       width=\"354\"\n//                       height=\"330\"\n//                       src={product}\n//                       alt=\"our products\"\n//                     />\n//                     <p\n//                       className={\n//                         inStock ? \"gallery_brand\" : \"gallery_brand--disabled\"\n//                       }\n//                     >\n//                       {brand}\n//                       {name}\n//                     </p>\n//                     <p\n//                       className={\n//                         inStock ? \"gallery_price\" : \"gallery_price--disabled\"\n//                       }\n//                     >\n//                       {symbolCard}\n//                       {productAll.length > 0 &&\n//                         price.map((data) => {\n//                           return priceHomePage\n//                             .filter((val, ind, arr) => arr.indexOf(val) === ind)\n//                             .find((val, ind) => {\n//                               if (\n//                                 inx === ind &&\n//                                 val === data.amount &&\n//                                 data.currency.symbol.trim() ===\n//                                   symbolCard.trim()\n//                               ) {\n//                                 return val;\n//                               }\n//                               return null;\n//                             });\n//                         })}\n//                     </p>\n//                     {id === this.state.id && inStock && (\n//                       <button\n//                         id={id}\n//                         onClick={this.addBag}\n//                         className=\"btn_add-basket\"\n//                       >\n//                         <img src={Basket} alt=\"Add to basket\" />\n//                       </button>\n//                     )}\n//                     {!inStock && <p className=\"gallery_out\">OUT OF STOCK</p>}\n//                   </li>\n//                 );\n//               }\n//             )}\n//         </ul>\n//         {modalBag && <ModalBag symbol={symbolCard} toggle={toggle} />}\n//       </main>\n//     );\n//   }\n// }\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}